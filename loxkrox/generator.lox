// LoxKrox Generator
// A code generator for packing LoxKrox into a single file.
// Copyright (c) 2023 Chris Roberts (Krobbizoid).
// Released under the MIT License:
// https://krobbi.github.io/license/2023/mit.txt

// LoxKrox's module index.
fun index(include){
	include("core/main.lox");
}

// Run the LoxKrox generator.
fun main(){
	if(x_args() != 1){
		print "LoxKrox generator expects no arguments.";
		return;
	}
	
	// Get a directory path from a file path.
	fun get_file_dir(file){
		var file_length = x_length(file);
		var dir_length = 0;
		
		for(var i = 0; i < file_length; i = i + 1){
			var file_char = x_substring(file, i, 1);
			
			if(file_char == "/" or file_char == "\"){
				dir_length = i + 1;
			}
		}
		
		var dir = "";
		
		// Normalize backslashes to forward slashes.
		for(var i = 0; i < dir_length; i = i + 1){
			var file_char = x_substring(file, i, 1);
			
			if(file_char == "\"){
				dir = dir + "/";
			} else {
				dir = dir + file_char;
			}
		}
		
		return dir;
	}
	
	var base_dir = get_file_dir(x_arg(0));
	var write_stream = x_write(base_dir + "krox.lox");
	
	if(!write_stream){
		print "Failed to open LoxKrox for writing.";
		return;
	}
	
	// Put a line of text to the write stream.
	fun put_line(line){
		var line_length = x_length(line);
		
		for(var i = 0; i < line_length; i = i + 1){
			x_put(x_ord(x_substring(line, i, 1)), write_stream);
		}
		
		x_put(10, write_stream);
	}
	
	put_line("// LoxKrox");
	put_line("// A Krox compiler written in Lox.");
	put_line("// Copyright (c) 2023 Chris Roberts (Krobbizoid).");
	put_line("// Released under the MIT License:");
	put_line("// https://krobbi.github.io/license/2023/mit.txt");
	put_line("");
	put_line("// This file was generated by `generator.lox`. Do not edit it directly.");
	put_line("// Run `generator.lox` or use `make regen` to regenerate LoxKrox from source.");
	
	// Put a module to the write stream.
	fun put_module(file){
		var read_stream = x_read(base_dir + file);
		
		if(!read_stream){
			print "Failed to open module `" + file + "` for reading. File may not exist.";
			return;
		}
		
		put_line("");
		
		var separator = "// MODULE // `" + file + "` // ";
		var separator_length = x_length(separator);
		
		while(separator_length < 77){
			separator = separator + "=";
			separator_length = separator_length + 1;
		}
		
		put_line(separator + " //");
		put_line("");
		
		var module_byte = x_get(read_stream);
		
		while(module_byte){
			x_put(module_byte, write_stream);
			module_byte = x_get(read_stream);
		}
		
		if(!x_close(read_stream)){
			print "Failed to close module `" + file + "` after reading.";
		}
	}
	
	index(put_module);
	
	if(!x_close(write_stream)){
		print "Failed to close LoxKrox after writing.";
	}
}

main();
