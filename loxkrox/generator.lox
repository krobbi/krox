// LoxKrox Generator
// A code generator for packing LoxKrox into a single file.
// Copyright (c) 2023 Chris Roberts (Krobbizoid).
// Released under the MIT License:
// https://krobbi.github.io/license/2023/mit.txt

// Generate LoxKrox.
fun generate_loxkrox(add_line, add_module){
	add_line("// LoxKrox");
	add_line("// A Krox compiler written in Lox.");
	add_line("// Copyright (c) 2023 Chris Roberts (Krobbizoid).");
	add_line("// Released under the MIT License:");
	add_line("// https://krobbi.github.io/license/2023/mit.txt");
	add_line("");
	add_line("// This file was generated by `generator.lox`. Do not edit it directly.");
	add_line("// Run `generator.lox` or use `make regen` to regenerate LoxKrox from source.");
	
	add_module("string/char.lox");
	add_module("string/string.lox");
	add_module("collections/list_node.lox");
	add_module("collections/list_iterator.lox");
	add_module("collections/list.lox");
	add_module("collections/map_node.lox");
	add_module("collections/map.lox");
	add_module("logger/span.lox");
	add_module("logger/log_record.lox");
	add_module("logger/logger.lox");
	add_module("lexer/token_type.lox");
	add_module("lexer/token.lox");
	add_module("lexer/lexer.lox");
	add_module("ast/ast_node.lox");
	add_module("ast/nodes/block_stmt_ast_node.lox");
	add_module("ast/nodes/export_ast_node.lox");
	add_module("ast/nodes/expr_stmt_ast_node.lox");
	add_module("ast/nodes/fn_stmt_ast_node.lox");
	add_module("ast/nodes/import_ast_node.lox");
	add_module("ast/nodes/import_item_ast_node.lox");
	add_module("ast/nodes/literal_expr_ast_node.lox");
	add_module("ast/nodes/module_ast_node.lox");
	add_module("ast/nodes/nop_stmt_ast_node.lox");
	add_module("ast/nodes/paren_expr_ast_node.lox");
	add_module("ast/nodes/print_stmt_ast_node.lox");
	add_module("ast/nodes/program_ast_node.lox");
	add_module("ast/ast_visitor.lox");
	add_module("ast/printer/ast_printer_node.lox");
	add_module("ast/printer/ast_printer.lox");
	add_module("parser/parser.lox");
	add_module("importer/importer.lox");
	add_module("tests/tests.lox");
	add_module("core/main.lox");
}

// Call a generator function from a base path and a target path.
fun call_generator(generator, base_path, target_path){
	var write_stream = x_write(base_path + target_path);
	
	if(!write_stream){
		print "Failed to open `" + target_path + "` for writing.";
		return;
	}
	
	// Add a line of text to the write stream.
	fun add_line(line){
		var line_length = x_length(line);
		
		for(var i = 0; i < line_length; i = i + 1){
			x_put(x_ord(x_substring(line, i, 1)), write_stream);
		}
		
		x_put(10, write_stream);
	}
	
	// Add a module to the write stream.
	fun add_module(module){
		var read_stream = x_read(base_path + module);
		
		if(!read_stream){
			print "Failed to open `" + module + "` for reading. File may not exist.";
			return;
		}
		
		add_line("");
		var separator = "// MODULE // `" + module + "` // ====";
		var separator_length = x_length(separator);
		
		while(separator_length < 77){
			separator = separator + "=";
			separator_length = separator_length + 1;
		}
		
		add_line(separator + " //");
		add_line("");
		var byte = x_get(read_stream);
		
		while(byte){
			x_put(byte, write_stream);
			byte = x_get(read_stream);
		}
		
		if(!x_close(read_stream)){
			print "Failed to close `" + module + "` after reading.";
		}
	}
	
	generator(add_line, add_module);
	
	if(!x_close(write_stream)){
		print "Failed to close `" + target_path + "` after writing.";
	}
}

// Run the LoxKrox generator from arguments.
fun main(){
	if(x_args() != 1){
		print "LoxKrox generator expects no arguments.";
		return;
	}
	
	var generator_path = x_arg(0);
	var generator_path_length = x_length(generator_path);
	var base_path = "";
	var base_path_length = 0;
	
	for(var i = 0; i < generator_path_length; i = i + 1){
		var character = x_substring(generator_path, i, 1);
		
		if(character == "/" or character == "\"){
			base_path = base_path + "/";
			base_path_length = i + 1;
		} else {
			base_path = base_path + character;
		}
	}
	
	base_path = x_substring(base_path, 0, base_path_length);
	call_generator(generate_loxkrox, base_path, "krox.lox");
}

main();
