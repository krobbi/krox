// Visits AST nodes and returns values for each type of AST node.
class ASTVisitor {
	// Initialize the AST visitor.
	init(){}
	
	// Visit an AST node and return a value.
	visit(node){
		return node.accept_visitor(this);
	}
	
	// Visit a block statement AST node and return a value.
	visit_block_stmt(node){
		return nil;
	}
	
	// Visit an export AST node and return a value.
	visit_export(node){
		return nil;
	}
	
	// Visit an expression statement AST node and return a value.
	visit_expr_stmt(node){
		return nil;
	}
	
	// Visit a function statement AST node and return a value.
	visit_fn_stmt(node){
		return nil;
	}
	
	// Visit an import AST node and return a value.
	visit_import(node){
		return nil;
	}
	
	// Visit an import item AST node and return a value.
	visit_import_item(node){
		return nil;
	}
	
	// Visit a literal expression AST node and return a value.
	visit_literal_expr(node){
		return nil;
	}
	
	// Visit a module AST node and return a value.
	visit_module(node){
		return nil;
	}
	
	// Visit a program AST node and return a value.
	visit_program(node){
		return nil;
	}
}
