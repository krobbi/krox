(* Krox Reference Grammar *)

module = { import | export | item }, EOF ;

import = ">", STRING, "{", [ import_items ], "}" ;
import_items = import_item, [ ",", [ import_items ] ] ;
import_item = IDENTIFIER, [ ">", IDENTIFIER ] ;

export = "<", item ;

item = fn_stmt ;

stmt = fn_stmt | block_stmt | expr_stmt ;
fn_stmt = "fn", IDENTIFIER, "(", ")", block_stmt ;
block_stmt = "{", { stmt }, "}" ;
expr_stmt = expr, ";" ;

expr = primary_expr ;
primary_expr = parenthetical_expr | literal_expr ;
parenthetical_expr = "(", expr, ")" ;
literal_expr = STRING ;
