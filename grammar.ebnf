(* Krox Reference Grammar *)

module = { import | export | fn_stmt }, EOF ;

import = "import", STRING, "{", [ import_items ], "}" ;
import_items = import_item, [ ",", [ import_items ] ] ;
import_item = IDENTIFIER, [ "as", IDENTIFIER ] ;

export = "export", "{", [ export_items ], "}" ;
export_items = export_item, [ ",", [ export_items ] ] ;
export_item = IDENTIFIER, [ "as", IDENTIFIER ] ;

stmt = fn_stmt | block_stmt | print_stmt | nop_stmt | expr_stmt ;
fn_stmt = "fn", IDENTIFIER, "(", ")", block_stmt ;
block_stmt = "{", { stmt }, "}" ;
print_stmt = "print", paren_expr, ";" ;
nop_stmt = ";" ;
expr_stmt = expr, ";" ;

expr = primary_expr ;
primary_expr = paren_expr | literal_expr ;
paren_expr = "(", expr, ")" ;
literal_expr = STRING ;
